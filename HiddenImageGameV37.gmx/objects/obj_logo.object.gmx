<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create global array heart and fill with 1’s and 0’s
globalvar heart;
globalvar heart_blksp;
global.heart_blksp=18;
heart[1,1]=0;
heart[1,2]=0;
heart[1,3]=0;
heart[1,4]=0;
heart[1,5]=0;
heart[1,6]=0;
heart[1,7]=0;
heart[1,8]=0;
heart[2,1]=0;
heart[2,2]=1;
heart[2,3]=1;
heart[2,4]=0;
heart[2,5]=0;
heart[2,6]=1;
heart[2,7]=1;
heart[2,8]=0;
heart[3,1]=1;
heart[3,2]=0;
heart[3,3]=0;
heart[3,4]=1;
heart[3,5]=1;
heart[3,6]=0;
heart[3,7]=0;
heart[3,8]=1;
heart[4,1]=1;
heart[4,2]=0;
heart[4,3]=0;
heart[4,4]=0;
heart[4,5]=0;
heart[4,6]=0;
heart[4,7]=0;
heart[4,8]=1;
heart[5,1]=1;
heart[5,2]=0;
heart[5,3]=0;
heart[5,4]=0;
heart[5,5]=0;
heart[5,6]=0;
heart[5,7]=0;
heart[5,8]=1;
heart[6,1]=0;
heart[6,2]=1;
heart[6,3]=0;
heart[6,4]=0;
heart[6,5]=0;
heart[6,6]=0;
heart[6,7]=1;
heart[6,8]=0;
heart[7,1]=0;
heart[7,2]=0;
heart[7,3]=1;
heart[7,4]=0;
heart[7,5]=0;
heart[7,6]=1;
heart[7,7]=0;
heart[7,8]=0;
heart[8,1]=0;
heart[8,2]=0;
heart[8,3]=0;
heart[8,4]=1;
heart[8,5]=1;
heart[8,6]=0;
heart[8,7]=0;
heart[8,8]=0;
 
 
//create global array face and fill with 1’s and 0’s
globalvar face;
globalvar face_blksp;
global.face_blksp=20;
face[1,1]=0;
face[1,2]=0;
face[1,3]=0;
face[1,4]=1;
face[1,5]=1;
face[1,6]=0;
face[1,7]=0;
face[1,8]=0;
face[2,1]=0;
face[2,2]=0;
face[2,3]=1;
face[2,4]=0;
face[2,5]=0;
face[2,6]=1;
face[2,7]=0;
face[2,8]=0;
face[3,1]=0;
face[3,2]=1;
face[3,3]=0;
face[3,4]=0;
face[3,5]=0;
face[3,6]=0;
face[3,7]=1;
face[3,8]=0;
face[4,1]=1;
face[4,2]=0;
face[4,3]=1;
face[4,4]=0;
face[4,5]=0;
face[4,6]=1;
face[4,7]=0;
face[4,8]=1;
face[5,1]=1;
face[5,2]=0;
face[5,3]=0;
face[5,4]=0;
face[5,5]=0;
face[5,6]=0;
face[5,7]=0;
face[5,8]=1;
face[6,1]=0;
face[6,2]=1;
face[6,3]=0;
face[6,4]=1;
face[6,5]=1;
face[6,6]=0;
face[6,7]=1;
face[6,8]=0;
face[7,1]=0;
face[7,2]=0;
face[7,3]=1;
face[7,4]=0;
face[7,5]=0;
face[7,6]=1;
face[7,7]=0;
face[7,8]=0;
face[8,1]=0;
face[8,2]=0;
face[8,3]=0;
face[8,4]=1;
face[8,5]=1;
face[8,6]=0;
face[8,7]=0;
face[8,8]=0;

//create global array alien and fill with 1’s and 0’s
globalvar alien;
globalvar alien_blksp;
global.alien_blksp=20;
alien[1,1]=1;
alien[1,2]=0;
alien[1,3]=0;
alien[1,4]=0;
alien[1,5]=0;
alien[1,6]=0;
alien[1,7]=0;
alien[1,8]=1;
alien[2,1]=0;
alien[2,2]=1;
alien[2,3]=0;
alien[2,4]=0;
alien[2,5]=0;
alien[2,6]=0;
alien[2,7]=1;
alien[2,8]=0;
alien[3,1]=0;
alien[3,2]=0;
alien[3,3]=1;
alien[3,4]=1;
alien[3,5]=1;
alien[3,6]=1;
alien[3,7]=0;
alien[3,8]=0;
alien[4,1]=0;
alien[4,2]=1;
alien[4,3]=0;
alien[4,4]=0;
alien[4,5]=0;
alien[4,6]=0;
alien[4,7]=1;
alien[4,8]=0;
alien[5,1]=0;
alien[5,2]=1;
alien[5,3]=0;
alien[5,4]=0;
alien[5,5]=0;
alien[5,6]=0;
alien[5,7]=1;
alien[5,8]=0;
alien[6,1]=0;
alien[6,2]=1;
alien[6,3]=0;
alien[6,4]=0;
alien[6,5]=0;
alien[6,6]=0;
alien[6,7]=1;
alien[6,8]=0;
alien[7,1]=0;
alien[7,2]=0;
alien[7,3]=1;
alien[7,4]=1;
alien[7,5]=1;
alien[7,6]=1;
alien[7,7]=0;
alien[7,8]=0;
alien[8,1]=0;
alien[8,2]=0;
alien[8,3]=0;
alien[8,4]=1;
alien[8,5]=1;
alien[8,6]=0;
alien[8,7]=0;
alien[8,8]=0;

//create global array house and fill with 1’s and 0’s
globalvar house;
globalvar house_blksp;
global.house_blksp=27;
house[1,1]=0;
house[1,2]=0;
house[1,3]=0;
house[1,4]=1;
house[1,5]=0;
house[1,6]=0;
house[1,7]=0;
house[1,8]=0;
house[2,1]=0;
house[2,2]=0;
house[2,3]=1;
house[2,4]=0;
house[2,5]=1;
house[2,6]=0;
house[2,7]=0;
house[2,8]=0;
house[3,1]=0;
house[3,2]=1;
house[3,3]=0;
house[3,4]=0;
house[3,5]=0;
house[3,6]=1;
house[3,7]=0;
house[3,8]=0;
house[4,1]=1;
house[4,2]=0;
house[4,3]=0;
house[4,4]=0;
house[4,5]=0;
house[4,6]=0;
house[4,7]=1;
house[4,8]=0;
house[5,1]=1;
house[5,2]=0;
house[5,3]=1;
house[5,4]=1;
house[5,5]=1;
house[5,6]=0;
house[5,7]=1;
house[5,8]=0;
house[6,1]=1;
house[6,2]=0;
house[6,3]=1;
house[6,4]=0;
house[6,5]=1;
house[6,6]=0;
house[6,7]=1;
house[6,8]=0;
house[7,1]=1;
house[7,2]=0;
house[7,3]=1;
house[7,4]=0;
house[7,5]=1;
house[7,6]=0;
house[7,7]=1;
house[7,8]=0;
house[8,1]=1;
house[8,2]=1;
house[8,3]=1;
house[8,4]=1;
house[8,5]=1;
house[8,6]=1;
house[8,7]=1;
house[8,8]=0;

//create global array boat and fill with 1’s and 0’s
globalvar boat;
globalvar boat_blksp;
global.boat_blksp=19;
boat[1,1]=0;
boat[1,2]=0;
boat[1,3]=0;
boat[1,4]=1;
boat[1,5]=0;
boat[1,6]=0;
boat[1,7]=0;
boat[1,8]=0;
boat[2,1]=0;
boat[2,2]=0;
boat[2,3]=0;
boat[2,4]=1;
boat[2,5]=1;
boat[2,6]=0;
boat[2,7]=0;
boat[2,8]=0;
boat[3,1]=0;
boat[3,2]=0;
boat[3,3]=0;
boat[3,4]=1;
boat[3,5]=1;
boat[3,6]=1;
boat[3,7]=0;
boat[3,8]=0;
boat[4,1]=0;
boat[4,2]=0;
boat[4,3]=0;
boat[4,4]=1;
boat[4,5]=0;
boat[4,6]=0;
boat[4,7]=0;
boat[4,8]=0;
boat[5,1]=0;
boat[5,2]=1;
boat[5,3]=1;
boat[5,4]=1;
boat[5,5]=1;
boat[5,6]=1;
boat[5,7]=1;
boat[5,8]=0;
boat[6,1]=0;
boat[6,2]=1;
boat[6,3]=0;
boat[6,4]=0;
boat[6,5]=0;
boat[6,6]=0;
boat[6,7]=1;
boat[6,8]=0;
boat[7,1]=0;
boat[7,2]=0;
boat[7,3]=1;
boat[7,4]=0;
boat[7,5]=0;
boat[7,6]=1;
boat[7,7]=0;
boat[7,8]=0;
boat[8,1]=0;
boat[8,2]=0;
boat[8,3]=0;
boat[8,4]=1;
boat[8,5]=1;
boat[8,6]=0;
boat[8,7]=0;
boat[8,8]=0;

//create global array uparrow and fill with 1’s and 0’s
globalvar uparrow;
globalvar uparrow_blksp;
global.uparrow_blksp=24;
uparrow[1,1]=0;
uparrow[1,2]=0;
uparrow[1,3]=0;
uparrow[1,4]=1;
uparrow[1,5]=1;
uparrow[1,6]=0;
uparrow[1,7]=0;
uparrow[1,8]=0;
uparrow[2,1]=0;
uparrow[2,2]=0;
uparrow[2,3]=1;
uparrow[2,4]=0;
uparrow[2,5]=0;
uparrow[2,6]=1;
uparrow[2,7]=0;
uparrow[2,8]=0;
uparrow[3,1]=0;
uparrow[3,2]=1;
uparrow[3,3]=0;
uparrow[3,4]=0;
uparrow[3,5]=0;
uparrow[3,6]=0;
uparrow[3,7]=1;
uparrow[3,8]=0;
uparrow[4,1]=1;
uparrow[4,2]=1;
uparrow[4,3]=1;
uparrow[4,4]=1;
uparrow[4,5]=1;
uparrow[4,6]=1;
uparrow[4,7]=1;
uparrow[4,8]=1;
uparrow[5,1]=0;
uparrow[5,2]=0;
uparrow[5,3]=1;
uparrow[5,4]=0;
uparrow[5,5]=0;
uparrow[5,6]=1;
uparrow[5,7]=0;
uparrow[5,8]=0;
uparrow[6,1]=0;
uparrow[6,2]=0;
uparrow[6,3]=1;
uparrow[6,4]=0;
uparrow[6,5]=0;
uparrow[6,6]=1;
uparrow[6,7]=0;
uparrow[6,8]=0;
uparrow[7,1]=0;
uparrow[7,2]=0;
uparrow[7,3]=1;
uparrow[7,4]=0;
uparrow[7,5]=0;
uparrow[7,6]=1;
uparrow[7,7]=0;
uparrow[7,8]=0;
uparrow[8,1]=0;
uparrow[8,2]=0;
uparrow[8,3]=1;
uparrow[8,4]=1;
uparrow[8,5]=1;
uparrow[8,6]=1;
uparrow[8,7]=0;
uparrow[8,8]=0;

//create global array teddybear and fill with 1’s and 0’s
globalvar teddybear;
globalvar teddybear_blksp;
global.teddybear_blksp=20;
teddybear[1,1]=0;
teddybear[1,2]=1;
teddybear[1,3]=0;
teddybear[1,4]=0;
teddybear[1,5]=0;
teddybear[1,6]=1;
teddybear[1,7]=0;
teddybear[1,8]=0;
teddybear[2,1]=0;
teddybear[2,2]=0;
teddybear[2,3]=1;
teddybear[2,4]=1;
teddybear[2,5]=1;
teddybear[2,6]=0;
teddybear[2,7]=0;
teddybear[2,8]=0;
teddybear[3,1]=0;
teddybear[3,2]=0;
teddybear[3,3]=1;
teddybear[3,4]=1;
teddybear[3,5]=1;
teddybear[3,6]=0;
teddybear[3,7]=0;
teddybear[3,8]=0;
teddybear[4,1]=0;
teddybear[4,2]=0;
teddybear[4,3]=0;
teddybear[4,4]=1;
teddybear[4,5]=0;
teddybear[4,6]=0;
teddybear[4,7]=0;
teddybear[4,8]=0;
teddybear[5,1]=0;
teddybear[5,2]=1;
teddybear[5,3]=1;
teddybear[5,4]=1;
teddybear[5,5]=1;
teddybear[5,6]=1;
teddybear[5,7]=0;
teddybear[5,8]=0;
teddybear[6,1]=0;
teddybear[6,2]=0;
teddybear[6,3]=0;
teddybear[6,4]=1;
teddybear[6,5]=0;
teddybear[6,6]=0;
teddybear[6,7]=0;
teddybear[6,8]=0;
teddybear[7,1]=0;
teddybear[7,2]=0;
teddybear[7,3]=1;
teddybear[7,4]=1;
teddybear[7,5]=1;
teddybear[7,6]=0;
teddybear[7,7]=0;
teddybear[7,8]=0;
teddybear[8,1]=0;
teddybear[8,2]=0;
teddybear[8,3]=1;
teddybear[8,4]=0;
teddybear[8,5]=1;
teddybear[8,6]=0;
teddybear[8,7]=0;
teddybear[8,8]=0;

//create global array car and fill with 1’s and 0’s
globalvar car;
globalvar car_blksp;
global.car_blksp=34;
car[1,1]=0;
car[1,2]=0;
car[1,3]=0;
car[1,4]=0;
car[1,5]=1;
car[1,6]=1;
car[1,7]=1;
car[1,8]=0;
car[2,1]=0;
car[2,2]=0;
car[2,3]=0;
car[2,4]=1;
car[2,5]=0;
car[2,6]=0;
car[2,7]=0;
car[2,8]=1;
car[3,1]=0;
car[3,2]=0;
car[3,3]=1;
car[3,4]=0;
car[3,5]=0;
car[3,6]=0;
car[3,7]=0;
car[3,8]=1;
car[4,1]=0;
car[4,2]=1;
car[4,3]=1;
car[4,4]=1;
car[4,5]=0;
car[4,6]=0;
car[4,7]=0;
car[4,8]=1;
car[5,1]=1;
car[5,2]=1;
car[5,3]=1;
car[5,4]=1;
car[5,5]=1;
car[5,6]=1;
car[5,7]=1;
car[5,8]=1;
car[6,1]=1;
car[6,2]=1;
car[6,3]=1;
car[6,4]=1;
car[6,5]=1;
car[6,6]=1;
car[6,7]=1;
car[6,8]=0;
car[7,1]=0;
car[7,2]=1;
car[7,3]=1;
car[7,4]=1;
car[7,5]=1;
car[7,6]=1;
car[7,7]=1;
car[7,8]=0;
car[8,1]=0;
car[8,2]=0;
car[8,3]=1;
car[8,4]=0;
car[8,5]=0;
car[8,6]=0;
car[8,7]=1;
car[8,8]=0;

//create global array man and fill with 1’s and 0’s
globalvar man;
globalvar man_blksp;
global.man_blksp=20;
man[1,1]=0;
man[1,2]=0;
man[1,3]=0;
man[1,4]=1;
man[1,5]=0;
man[1,6]=0;
man[1,7]=0;
man[1,8]=0;
man[2,1]=1;
man[2,2]=0;
man[2,3]=0;
man[2,4]=1;
man[2,5]=0;
man[2,6]=0;
man[2,7]=1;
man[2,8]=0;
man[3,1]=0;
man[3,2]=1;
man[3,3]=1;
man[3,4]=1;
man[3,5]=1;
man[3,6]=1;
man[3,7]=0;
man[3,8]=0;
man[4,1]=0;
man[4,2]=0;
man[4,3]=1;
man[4,4]=1;
man[4,5]=1;
man[4,6]=0;
man[4,7]=0;
man[4,8]=0;
man[5,1]=0;
man[5,2]=0;
man[5,3]=1;
man[5,4]=0;
man[5,5]=1;
man[5,6]=0;
man[5,7]=0;
man[5,8]=0;
man[6,1]=0;
man[6,2]=0;
man[6,3]=1;
man[6,4]=0;
man[6,5]=1;
man[6,6]=0;
man[6,7]=0;
man[6,8]=0;
man[7,1]=0;
man[7,2]=0;
man[7,3]=1;
man[7,4]=0;
man[7,5]=1;
man[7,6]=0;
man[7,7]=0;
man[7,8]=0;
man[8,1]=0;
man[8,2]=1;
man[8,3]=0;
man[8,4]=0;
man[8,5]=0;
man[8,6]=1;
man[8,7]=0;
man[8,8]=0;

//create global array fence and fill with 1’s and 0’s
globalvar fence;
globalvar fence_blksp;
global.fence_blksp=28;
fence[1,1]=0;
fence[1,2]=0;
fence[1,3]=0;
fence[1,4]=0;
fence[1,5]=0;
fence[1,6]=0;
fence[1,7]=0;
fence[1,8]=0;
fence[2,1]=0;
fence[2,2]=0;
fence[2,3]=0;
fence[2,4]=0;
fence[2,5]=0;
fence[2,6]=0;
fence[2,7]=0;
fence[2,8]=0;
fence[3,1]=0;
fence[3,2]=1;
fence[3,3]=0;
fence[3,4]=0;
fence[3,5]=1;
fence[3,6]=0;
fence[3,7]=0;
fence[3,8]=1;
fence[4,1]=1;
fence[4,2]=1;
fence[4,3]=1;
fence[4,4]=1;
fence[4,5]=1;
fence[4,6]=1;
fence[4,7]=1;
fence[4,8]=1;
fence[5,1]=0;
fence[5,2]=1;
fence[5,3]=0;
fence[5,4]=0;
fence[5,5]=1;
fence[5,6]=0;
fence[5,7]=0;
fence[5,8]=1;
fence[6,1]=1;
fence[6,2]=1;
fence[6,3]=1;
fence[6,4]=1;
fence[6,5]=1;
fence[6,6]=1;
fence[6,7]=1;
fence[6,8]=1;
fence[7,1]=0;
fence[7,2]=1;
fence[7,3]=0;
fence[7,4]=0;
fence[7,5]=1;
fence[7,6]=0;
fence[7,7]=0;
fence[7,8]=1;
fence[8,1]=0;
fence[8,2]=1;
fence[8,3]=0;
fence[8,4]=0;
fence[8,5]=1;
fence[8,6]=0;
fence[8,7]=0;
fence[8,8]=1;

//create global array tree and fill with 1’s and 0’s
globalvar tree;
globalvar tree_blksp;
global.tree_blksp=23;
tree[1,1]=0;
tree[1,2]=1;
tree[1,3]=0;
tree[1,4]=1;
tree[1,5]=0;
tree[1,6]=1;
tree[1,7]=0;
tree[1,8]=1;
tree[2,1]=1;
tree[2,2]=0;
tree[2,3]=1;
tree[2,4]=0;
tree[2,5]=1;
tree[2,6]=0;
tree[2,7]=1;
tree[2,8]=0;
tree[3,1]=0;
tree[3,2]=1;
tree[3,3]=1;
tree[3,4]=0;
tree[3,5]=1;
tree[3,6]=1;
tree[3,7]=0;
tree[3,8]=0;
tree[4,1]=0;
tree[4,2]=1;
tree[4,3]=1;
tree[4,4]=1;
tree[4,5]=1;
tree[4,6]=1;
tree[4,7]=0;
tree[4,8]=0;
tree[5,1]=0;
tree[5,2]=0;
tree[5,3]=1;
tree[5,4]=1;
tree[5,5]=1;
tree[5,6]=0;
tree[5,7]=0;
tree[5,8]=0;
tree[6,1]=0;
tree[6,2]=0;
tree[6,3]=0;
tree[6,4]=1;
tree[6,5]=0;
tree[6,6]=0;
tree[6,7]=0;
tree[6,8]=0;
tree[7,1]=0;
tree[7,2]=0;
tree[7,3]=0;
tree[7,4]=1;
tree[7,5]=0;
tree[7,6]=0;
tree[7,7]=0;
tree[7,8]=0;
tree[8,1]=0;
tree[8,2]=0;
tree[8,3]=0;
tree[8,4]=1;
tree[8,5]=0;
tree[8,6]=0;
tree[8,7]=0;
tree[8,8]=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//encoded arrays for level two

globalvar heart_encoded_rowone;
globalvar heart_encoded_rowtwo;
globalvar heart_encoded_rowthree;
globalvar heart_encoded_rowfour;
globalvar heart_encoded_rowfive;
globalvar heart_encoded_rowsix;
globalvar heart_encoded_rowseven;
globalvar heart_encoded_roweight;

//blksp 18
heart_encoded_rowone="Row One: 80";
heart_encoded_rowtwo="Row Two: 02120210";
heart_encoded_rowthree="Row Three: 12021201";
heart_encoded_rowfour="Row four: 1601";
heart_encoded_rowfive="Row Five: 1601";
heart_encoded_rowsix="Row Six: 014010";
heart_encoded_rowseven="Row Seven: 20120120";
heart_encoded_roweight="Row Eight: 302130";


globalvar face_encoded_rowone;
globalvar face_encoded_rowtwo;
globalvar face_encoded_rowthree;
globalvar face_encoded_rowfour;
globalvar face_encoded_rowfive;
globalvar face_encoded_rowsix;
globalvar face_encoded_rowseven;
globalvar face_encoded_roweight;

//blksp 20
face_encoded_rowone="Row One: 302130";
face_encoded_rowtwo="Row Two: 20120120";
face_encoded_rowthree="Row Three: 014010";
face_encoded_rowfour="Row four: 10120101";
face_encoded_rowfive="Row Five: 1601";
face_encoded_rowsix="Row Six: 01021010";
face_encoded_rowseven="Row Seven: 20120120";
face_encoded_roweight="Row Eight: 302130";


globalvar alien_encoded_rowone;
globalvar alien_encoded_rowtwo;
globalvar alien_encoded_rowthree;
globalvar alien_encoded_rowfour;
globalvar alien_encoded_rowfive;
globalvar alien_encoded_rowsix;
globalvar alien_encoded_rowseven;
globalvar alien_encoded_roweight;

//blksp 20
alien_encoded_rowone="Row One: 1601";
alien_encoded_rowtwo="Row Two: 014010";
alien_encoded_rowthree="Row Three: 204120";
alien_encoded_rowfour="Row four: 014010";
alien_encoded_rowfive="Row Five: 014010";
alien_encoded_rowsix="Row Six: 014010";
alien_encoded_rowseven="Row Seven: 204120";
alien_encoded_roweight="Row Eight: 302130";

globalvar house_encoded_rowone;
globalvar house_encoded_rowtwo;
globalvar house_encoded_rowthree;
globalvar house_encoded_rowfour;
globalvar house_encoded_rowfive;
globalvar house_encoded_rowsix;
globalvar house_encoded_rowseven;
globalvar house_encoded_roweight;

//blksp 27
house_encoded_rowone="Row One: 30140";
house_encoded_rowtwo="Row Two: 2010130";
house_encoded_rowthree="Row Three: 0130120";
house_encoded_rowfour="Row four: 15010";
house_encoded_rowfive="Row Five: 1031010";
house_encoded_rowsix="Row Six: 10101010";
house_encoded_rowseven="Row Seven: 10101010";
house_encoded_roweight="Row Eight: 710";



globalvar boat_encoded_rowone;
globalvar boat_encoded_rowtwo;
globalvar boat_encoded_rowthree;
globalvar boat_encoded_rowfour;
globalvar boat_encoded_rowfive;
globalvar boat_encoded_rowsix;
globalvar boat_encoded_rowseven;
globalvar boat_encoded_roweight;

//blksp 19
boat_encoded_rowone="Row One:  30140";
boat_encoded_rowtwo="Row Two:  302130";
boat_encoded_rowthree="Row Three:  303120";
boat_encoded_rowfour="Row four:  30140";
boat_encoded_rowfive="Row Five:  0610";
boat_encoded_rowsix="Row Six:  014010";
boat_encoded_rowseven="Row Seven: 20120120";
boat_encoded_roweight="Row Eight: 302130";



globalvar uparrow_encoded_rowone;
globalvar uparrow_encoded_rowtwo;
globalvar uparrow_encoded_rowthree;
globalvar uparrow_encoded_rowfour;
globalvar uparrow_encoded_rowfive;
globalvar uparrow_encoded_rowsix;
globalvar uparrow_encoded_rowseven;
globalvar uparrow_encoded_roweight;

//blksp 24
uparrow_encoded_rowone="Row One: 302130";
uparrow_encoded_rowtwo="Row Two: 20120120";
uparrow_encoded_rowthree="Row Three: 014010";
uparrow_encoded_rowfour="Row four: 81";
uparrow_encoded_rowfive="Row Five: 20120120";
uparrow_encoded_rowsix="Row Six: 20120120";
uparrow_encoded_rowseven="Row Seven: 20120120";
uparrow_encoded_roweight="Row Eight: 204120";


globalvar teddybear_encoded_rowone;
globalvar teddybear_encoded_rowtwo;
globalvar teddybear_encoded_rowthree;
globalvar teddybear_encoded_rowfour;
globalvar teddybear_encoded_rowfive;
globalvar teddybear_encoded_rowsix;
globalvar teddybear_encoded_rowseven;
globalvar teddybear_encoded_roweight;

//blksp 20
teddybear_encoded_rowone="Row One :  0130120";
teddybear_encoded_rowtwo="Row Two :  203130";
teddybear_encoded_rowthree="Row Three :  203130";
teddybear_encoded_rowfour="Row four :  30140";
teddybear_encoded_rowfive="Row Five :  05120";
teddybear_encoded_rowsix="Row Six :  30140";
teddybear_encoded_rowseven="Row Seven :  203130";
teddybear_encoded_roweight="Row Eight :  2010130";


globalvar car_encoded_rowone;
globalvar car_encoded_rowtwo;
globalvar car_encoded_rowthree;
globalvar car_encoded_rowfour;
globalvar car_encoded_rowfive;
globalvar car_encoded_rowsix;
globalvar car_encoded_rowseven;
globalvar car_encoded_roweight;

//blksp 34
car_encoded_rowone="Row One: 40310";
car_encoded_rowtwo="Row Two: 301301";
car_encoded_rowthree="Row Three: 201401";
car_encoded_rowfour="Row four: 031301";
car_encoded_rowfive="Row Five: 81";
car_encoded_rowsix="Row Six: 710";
car_encoded_rowseven="Row Seven: 0610";
car_encoded_roweight="Row Eight: 2013010";



globalvar man_encoded_rowone;
globalvar man_encoded_rowtwo;
globalvar man_encoded_rowthree;
globalvar man_encoded_rowfour;
globalvar man_encoded_rowfive;
globalvar man_encoded_rowsix;
globalvar man_encoded_rowseven;
globalvar man_encoded_roweight;

//blksp 20
man_encoded_rowone="Row One: 30140";
man_encoded_rowtwo="Row Two: 12012010";
man_encoded_rowthree="Row Three: 05120";
man_encoded_rowfour="Row four: 203130";
man_encoded_rowfive="Row Five: 2010130";
man_encoded_rowsix="Row Six: 2010130";
man_encoded_rowseven="Row Seven: 2010130";
man_encoded_roweight="Row Eight: 0130120";


globalvar fence_encoded_rowone;
globalvar fence_encoded_rowtwo;
globalvar fence_encoded_rowthree;
globalvar fence_encoded_rowfour;
globalvar fence_encoded_rowfive;
globalvar fence_encoded_rowsix;
globalvar fence_encoded_rowseven;
globalvar fence_encoded_roweight;

//blksp 28
fence_encoded_rowone="Row One: 80";
fence_encoded_rowtwo="Row Two: 80";
fence_encoded_rowthree="Row Three: 01201201";
fence_encoded_rowfour="Row four: 81";
fence_encoded_rowfive="Row Five: 01201201";
fence_encoded_rowsix="Row Six: 81";
fence_encoded_rowseven="Row Seven: 01201201";
fence_encoded_roweight="Row Eight: 01201201";



globalvar tree_encoded_rowone;
globalvar tree_encoded_rowtwo;
globalvar tree_encoded_rowthree;
globalvar tree_encoded_rowfour;
globalvar tree_encoded_rowfive;
globalvar tree_encoded_rowsix;
globalvar tree_encoded_rowseven;
globalvar tree_encoded_roweight;

//blksp 23
tree_encoded_rowone="Row One: 01010101";
tree_encoded_rowtwo="Row Two: 10101010";
tree_encoded_rowthree="Row Three: 02102120";
tree_encoded_rowfour="Row four: 05120";
tree_encoded_rowfive="Row Five: 203130";
tree_encoded_rowsix="Row Six: 30140";
tree_encoded_rowseven="Row Seven: 30140";
tree_encoded_roweight="Row Eight: 30140";


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create a global variable to hold random number that points to an image array
globalvar imagenumber;
//call randomize() function to alter seed to get truely random number
randomize();
//generate a random number in order to randomly select an image array
global.imagenumber= irandom_range(1, 11);
//create global p1 array 
globalvar p1;


//encoding array variables

globalvar p1encodedrowone;
globalvar p1encodedrowtwo;
globalvar p1encodedrowthree;
globalvar p1encodedrowfour;
globalvar p1encodedrowfive;
globalvar p1encodedrowsix;
globalvar p1encodedrowseven;
globalvar p1encodedroweight;


//create if statements to grab selected image array
if (imagenumber==1){
p1=heart;
global.p1blkcount=global.heart_blksp;
p1encodedrowone=heart_encoded_rowone;
p1encodedrowtwo=heart_encoded_rowtwo;
p1encodedrowthree=heart_encoded_rowthree;;
p1encodedrowfour=heart_encoded_rowfour;
p1encodedrowfive=heart_encoded_rowfive;
p1encodedrowsix=heart_encoded_rowsix;
p1encodedrowseven=heart_encoded_rowseven;
p1encodedroweight=heart_encoded_roweight;
}
else if (imagenumber==2){
p1=face;
global.p1blkcount=global.face_blksp;

p1encodedrowone=face_encoded_rowone;
p1encodedrowtwo=face_encoded_rowtwo;
p1encodedrowthree=face_encoded_rowthree;;
p1encodedrowfour=face_encoded_rowfour;
p1encodedrowfive=face_encoded_rowfive;
p1encodedrowsix=face_encoded_rowsix;
p1encodedrowseven=face_encoded_rowseven;
p1encodedroweight=face_encoded_roweight;


}
else if (imagenumber==3){
p1=alien;
global.p1blkcount=global.alien_blksp;

p1encodedrowone=alien_encoded_rowone;
p1encodedrowtwo=alien_encoded_rowtwo;
p1encodedrowthree=alien_encoded_rowthree;;
p1encodedrowfour=alien_encoded_rowfour;
p1encodedrowfive=alien_encoded_rowfive;
p1encodedrowsix=alien_encoded_rowsix;
p1encodedrowseven=alien_encoded_rowseven;
p1encodedroweight=alien_encoded_roweight;


}
else if (imagenumber==4){
p1=house;
global.p1blkcount=global.house_blksp;

p1encodedrowone=house_encoded_rowone;
p1encodedrowtwo=house_encoded_rowtwo;
p1encodedrowthree=house_encoded_rowthree;;
p1encodedrowfour=house_encoded_rowfour;
p1encodedrowfive=house_encoded_rowfive;
p1encodedrowsix=house_encoded_rowsix;
p1encodedrowseven=house_encoded_rowseven;
p1encodedroweight=house_encoded_roweight;


}
else if (imagenumber==5){
p1=boat;
global.p1blkcount=global.boat_blksp;

p1encodedrowone=boat_encoded_rowone;
p1encodedrowtwo=boat_encoded_rowtwo;
p1encodedrowthree=boat_encoded_rowthree;;
p1encodedrowfour=boat_encoded_rowfour;
p1encodedrowfive=boat_encoded_rowfive;
p1encodedrowsix=boat_encoded_rowsix;
p1encodedrowseven=boat_encoded_rowseven;
p1encodedroweight=boat_encoded_roweight;


}
else if (imagenumber==6){
p1=uparrow;
global.p1blkcount=global.uparrow_blksp;

p1encodedrowone=uparrow_encoded_rowone;
p1encodedrowtwo=uparrow_encoded_rowtwo;
p1encodedrowthree=uparrow_encoded_rowthree;;
p1encodedrowfour=uparrow_encoded_rowfour;
p1encodedrowfive=uparrow_encoded_rowfive;
p1encodedrowsix=uparrow_encoded_rowsix;
p1encodedrowseven=uparrow_encoded_rowseven;
p1encodedroweight=uparrow_encoded_roweight;



}
else if (imagenumber==7){
p1=teddybear;
global.p1blkcount=global.teddybear_blksp;

p1encodedrowone=teddybear_encoded_rowone;
p1encodedrowtwo=teddybear_encoded_rowtwo;
p1encodedrowthree=teddybear_encoded_rowthree;;
p1encodedrowfour=teddybear_encoded_rowfour;
p1encodedrowfive=teddybear_encoded_rowfive;
p1encodedrowsix=teddybear_encoded_rowsix;
p1encodedrowseven=teddybear_encoded_rowseven;
p1encodedroweight=teddybear_encoded_roweight;


}
else if (imagenumber==8){
p1=car;
global.p1blkcount=global.car_blksp;

p1encodedrowone=car_encoded_rowone;
p1encodedrowtwo=car_encoded_rowtwo;
p1encodedrowthree=car_encoded_rowthree;;
p1encodedrowfour=car_encoded_rowfour;
p1encodedrowfive=car_encoded_rowfive;
p1encodedrowsix=car_encoded_rowsix;
p1encodedrowseven=car_encoded_rowseven;
p1encodedroweight=car_encoded_roweight;


}
else if (imagenumber==9){
p1=man;
global.p1blkcount=global.man_blksp;

p1encodedrowone=man_encoded_rowone;
p1encodedrowtwo=man_encoded_rowtwo;
p1encodedrowthree=man_encoded_rowthree;;
p1encodedrowfour=man_encoded_rowfour;
p1encodedrowfive=man_encoded_rowfive;
p1encodedrowsix=man_encoded_rowsix;
p1encodedrowseven=man_encoded_rowseven;
p1encodedroweight=man_encoded_roweight;


}
else if (imagenumber==10){
p1=fence;
global.p1blkcount=global.fence_blksp;

p1encodedrowone=fence_encoded_rowone;
p1encodedrowtwo=fence_encoded_rowtwo;
p1encodedrowthree=fence_encoded_rowthree;;
p1encodedrowfour=fence_encoded_rowfour;
p1encodedrowfive=fence_encoded_rowfive;
p1encodedrowsix=fence_encoded_rowsix;
p1encodedrowseven=fence_encoded_rowseven;
p1encodedroweight=fence_encoded_roweight;


}
else if (imagenumber==11){
p1=tree;
global.p1blkcount=global.tree_blksp;

p1encodedrowone=tree_encoded_rowone;
p1encodedrowtwo=tree_encoded_rowtwo;
p1encodedrowthree=tree_encoded_rowthree;;
p1encodedrowfour=tree_encoded_rowfour;
p1encodedrowfive=tree_encoded_rowfive;
p1encodedrowsix=tree_encoded_rowsix;
p1encodedrowseven=tree_encoded_rowseven;
p1encodedroweight=tree_encoded_roweight;


}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar p1movecount;
global.p1movecount=0;

globalvar p1blkspcheck;
global.p1blkspcheck=0;

globalvar encodedTimer;
global.encodedTimer=0;
globalvar encodedLineCount;
global.encodedLineCount=0;

globalvar eTxt;
global.eTxt=1;


///below are variables only for level two

globalvar points;
global.points=0;

globalvar rowOne;
global.rowOne=0;

globalvar rowTwo;
global.rowTwo=0;

globalvar rowThree;
global.rowThree=0;

globalvar rowFour;
global.rowFour=0;

globalvar rowFive;
global.rowFive=0;

globalvar rowSix;
global.rowSix=0;

globalvar rowSeven;
global.rowSeven=0;

globalvar rowEight;
global.rowEight=0;


globalvar paused;
global.paused=0;

globalvar savedRoom;
global.savedRoom=rm_gameroom1;

globalvar guess;
global.guess=0;

globalvar encodedTimerLevel;
global.encodedTimerLevel=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>500,500</point>
  </PhysicsShapePoints>
</object>
